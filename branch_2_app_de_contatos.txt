BRANCH 2 APP DE CONTATOS


Para trabalhar com widgets que se expandem, primeiramente precisamos de um atributo booleano que define se está aberto ou
fechado (definido por padrão como falso), alterado por uma função, no caso do nosso código, "changeState()", assim:

	bool _isOpened = false;

	void changeState () {
		setState(() {
			_isOpened = !_isOpened;
      	});
    	}

Agora, vamos criar um método getter que retorna o tamanho que o objeto terá, de acordo com o valor de _isOpened:

	double get containerHeight => _isOpened ? 125.0 : 45.0;

E agora o atributo "height" do container que contém cada contato recebe "containerHeight", assim:

	height: containerHeight,

Importante notar que como o tamanho do ConctactLoistTile muda, os seus atributos precisam mudar também para que os objetos
estejam nos lugares que queremos.
Por isso, vamos definir o atributo "crossAxisAlignment" da Row maior como "CrossAxisAlignment.start" para que quando o
container se expanda os elementos continuem exibidos na parte de cima dele

Também podemos mudar o Container para um "Animatedontainer", que tem o atributo "duration" para que a expansão seja animada
e abra mais devagar, assim:

	duration: const Duration(milliseconds: 100),

Para definir o que vai aparecer apenas quando "_isOpened" for verdadeiro, usamos um widget "Visibility", cujo parâmetro
"visible" recebe a variável que vai definir quando ele será visível que, no caso, é _isOpened, assim:

	Visibility(
		visible: _isOpened,
		child: Text(widget.phone),
	),

Esse widget Visbility também pode ser envolto por um widget "AnimatedOpacity" que define uma animação para quando ele
aparece na tela, assim ele aparece aos poucos.





























